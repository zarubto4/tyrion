# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#CORS
OPTIONS   /*all                                                         utilities.authentication.Controller_Security.optionLink(all)

### DEVELOPERS TEST ############ DEVELOPERS TEST ############### DEVELOPERS TEST ################ DEVELOPERS TEST ###################################################
GET       /test1                                                        controllers.Controller_ZZZ_Tester.test1()
GET       /test2                                                        controllers.Controller_ZZZ_Tester.test2()
GET       /test3                                                        controllers.Controller_ZZZ_Tester.test3()
GET       /test4                                                        controllers.Controller_ZZZ_Tester.test4()
GET       /test5/:product_id                                            controllers.Controller_ZZZ_Tester.test5(product_id: java.util.UUID)
GET       /test6/:product_id                                            controllers.Controller_ZZZ_Tester.test6(product_id: java.util.UUID)
GET       /test7                                                        controllers.Controller_ZZZ_Tester.test7()
GET       /test8                                                        controllers.Controller_ZZZ_Tester.test8()
GET       /test9                                                        controllers.Controller_ZZZ_Tester.test9()

                                                                        #Allowed only in Developer Mode!
GET       /demodata                                                     utilities.demo_data.Utilities_Demo_data_Controller.all_for_becki()

### WEBSOCKET ############ WEBSOCKET ############### WEBSOCKET ################ WEBSOCKET ###########################################################################
###################################################################################f#################################################################################

GET       /websocket/portal/:token                                      controllers.Controller_WebSocket.portal(token: java.util.UUID)
GET       /websocket/homer/:token                                       controllers.Controller_WebSocket.homer(token)
GET       /websocket/compilation_server/:token                          controllers.Controller_WebSocket.compiler(token)
GET       /websocket/access_token                                       controllers.Controller_WebSocket.get_Websocket_token()

#API - CoreClient ####################################################################################################################################################
###################################################################################f##################################################################################

#Login page
POST      /login                                                        utilities.authentication.Controller_Security.login()
POST      /logout                                                       utilities.authentication.Controller_Security.logout()

POST      /apikey                                                       utilities.authentication.Controller_Security.apikey()

# Facebook login
PUT       /facebook/login/url-user                                       controllers.Controller_FacebookLogin.login_url_person()
GET       /facebook/login/redirect-user/                                 controllers.Controller_FacebookLogin.login_redirect_person()
PUT       /facebook/login/url                                            controllers.Controller_FacebookLogin.login_url()
GET       /facebook/login/redirect                                       controllers.Controller_FacebookLogin.login_redirect()

GET       /login/person                                                 utilities.authentication.Controller_Security.person_get_by_token()

### NOTIFICATION ############ NOTIFICATION ############### NOTIFICATION ################ NOTIFICATION ################################################################
######################################################################################################################################################################

GET       /notification/list/:page_number                               controllers.Controller_Notification.notification_getByFilter(page_number: Integer)
DELETE    /notification/:notification_id                                controllers.Controller_Notification.notification_delete(notification_id: java.util.UUID)

GET       /notification/unconfirmed                                     controllers.Controller_Notification.notifications_getUnconfirmed()
PUT       /notification/confirm/:notification_id                        controllers.Controller_Notification.notification_confirm(notification_id: java.util.UUID)

PUT       /notification/read                                            controllers.Controller_Notification.notification_read()

## Test - Private Api
POST      /test/notification/individual                                 utilities.notifications.NotificationTester.test_notifications()
POST      /test/notification/chain/:email                               utilities.notifications.NotificationTester.test_chain_notifications(email)


### ARTICLE ############ ARTICLE ############### ARTICLE ################ ARTICLE ################# ARTICLE ############ ARTICLE #####################################
######################################################################################################################################################################


POST      /article                                                      controllers.Controller_Article.article_create()
PUT       /article/:article_id                                          controllers.Controller_Article.article_edit(article_id: java.util.UUID)
DELETE    /article/:article_id                                          controllers.Controller_Article.article_delete(article_id: java.util.UUID)
PUT       /article/list/:page_number                                    controllers.Controller_Article.article_getByFilter(page_number:Int)


### PERSON ############ PERSON ############### PERSON ################ PERSON ################# PERSON ############ PERSON ###########################################
######################################################################################################################################################################

POST      /validate_entity                                              controllers.Controller_Person.something_validateProperty()

#Peron CRUD
POST      /person                                                       controllers.Controller_Person.person_create()
PUT       /person/:person_id                                            controllers.Controller_Person.person_update(person_id: java.util.UUID)
GET       /person/:person_id                                            controllers.Controller_Person.person_get(person_id: java.util.UUID)
DELETE    /person/:person_id                                            controllers.Controller_Person.person_delete(person_id: java.util.UUID)

POST      /person/authentication_email                                  controllers.Controller_Person.person_authenticationSendEmail()

GET       /person/connection/all                                        controllers.Controller_Person.person_getAllConnections()
DELETE    /person/connection/:connection_id                             controllers.Controller_Person.remove_Person_Connection(connection_id: java.util.UUID)

PUT       /person/deactivate/:person_id                                 controllers.Controller_Person.person_deactivate(person_id: java.util.UUID)
PUT       /person/activate/:person_id                                   controllers.Controller_Person.person_activate(person_id: java.util.UUID)
DELETE    /person/connections/:person_id                                controllers.Controller_Person.person_removeAllConnections(person_id: java.util.UUID)
PUT       /person/valid_email/:person_id                                controllers.Controller_Person.person_validEmail(person_id: java.util.UUID)

GET       /person/mail_authentication/:token                            controllers.Controller_Person.person_emailAuthentication(token: java.util.UUID)

POST      /person/change_property                                       controllers.Controller_Person.person_changeLoginProperty()
GET       /person/authorize_change/:token                               controllers.Controller_Person.person_authorizePropertyChange(token: java.util.UUID)

#Password recovery
POST      /person/password/recovery_mail                                controllers.Controller_Person.person_passwordRecoverySendEmail()
PUT       /person/password/recovery                                     controllers.Controller_Person.person_passwordRecovery()

#Personal Picture
PUT       /person/picture/upload                                        controllers.Controller_Person.person_uploadPicture()
PUT       /person/picture/remove                                        controllers.Controller_Person.person_removePicture()

### PERMISSION ############ PERMISSION ############### PERMISSION ################ PERMISSION ################# PERMISSION #####################################################
################################################################################################################################################################################

POST      /secure/rest_api_token_validation                             utilities.authentication.Controller_Security.get_status_request_token()

GET       /permission/all                                               controllers.Controller_Permission.permission_get_all()

PUT       /role/permission/:role_id                                     controllers.Controller_Role.role_addPermission(role_id: java.util.UUID)
DELETE    /role/permission/:role_id/:permission_id                      controllers.Controller_Role.role_removePermission(role_id: java.util.UUID, permission_id: java.util.UUID)

PUT       /role/person/:role_id                                         controllers.Controller_Role.role_addPerson(role_id: java.util.UUID)
DELETE    /role/person/:role_id/:person_id                              controllers.Controller_Role.role_removePerson(role_id: java.util.UUID, person_id: java.util.UUID)

PUT       /role/list/:page_number                                       controllers.Controller_Role.role_getByFilter(page_number:Int)

POST      /role                                                         controllers.Controller_Role.role_create()
DELETE    /role/:role_id                                                controllers.Controller_Role.role_delete(role_id: java.util.UUID)
PUT       /role/:role_id                                                controllers.Controller_Role.role_update(role_id: java.util.UUID)
GET       /role/:role_id                                                controllers.Controller_Role.role_get(role_id: java.util.UUID)
GET       /role                                                         controllers.Controller_Role.role_get_all()

GET       /secure/person/system_acces/:person_id                        controllers.Controller_Permission.system_access_get_everything(person_id: java.util.UUID)

### FINANCIAL ############ FINANCIAL ############### FINANCIAL ################ FINANCIAL ################# FINANCIAL ##########################################################
################################################################################################################################################################################

#Customer

POST      /customer                                                     controllers.Controller_Finance.create_customer()
GET       /customer                                                     controllers.Controller_Finance.customer_get_all()
POST      /customer/contact/:customer_id                                controllers.Controller_Finance.contact_customer_create(customer_id: java.util.UUID)

POST      /employee                                                     controllers.Controller_Finance.customer_add_employee()
DELETE    /employee/:employee_id                                        controllers.Controller_Finance.customer_remove_employee(employee_id: java.util.UUID)

#Contact
PUT       /contact/:contact_id                                          controllers.Controller_Finance.contact_update(contact_id: java.util.UUID)

#Payment details
PUT       /payment_details/:payment_details_id                          controllers.Controller_Finance.payment_details_update(payment_details_id: java.util.UUID)


#CRUD Tarrifs
POST      /product                                                      controllers.Controller_Finance.product_create()
GET       /product/all                                                  controllers.Controller_Finance.product_getAll()
GET       /product/:product_id                                          controllers.Controller_Finance.product_get(product_id: java.util.UUID)
PUT       /product/deactivate/:product_id                               controllers.Controller_Finance.product_deactivate(product_id: java.util.UUID)
PUT       /product/activate/:product_id                                 controllers.Controller_Finance.product_activate(product_id: java.util.UUID)
PUT       /product/credit/:product_id                                   controllers.Controller_Finance.product_credit(product_id: java.util.UUID)
PUT       /product/terminate_ondemand/:product_id                       controllers.Controller_Finance.product_terminateOnDemand(product_id: java.util.UUID)
DELETE    /product/:product_id                                          controllers.Controller_Finance.product_delete(product_id: java.util.UUID)

POST      /product_extension/:product_id                                controllers.Controller_Finance.productExtension_create(product_id: java.util.UUID)
GET       /product_extension                                            controllers.Controller_Finance.productExtension_getAll()

GET       /product_extension/:extension_id                              controllers.Controller_Finance.productExtension_get(extension_id: java.util.UUID)
PUT       /product_extension/activate/:extension_id                     controllers.Controller_Finance.productExtension_activate(extension_id: java.util.UUID)
PUT       /product_extension/deactivate/:extension_id                   controllers.Controller_Finance.productExtension_deactivate(extension_id: java.util.UUID)
DELETE    /product_extension/:extension_id                              controllers.Controller_Finance.productExtension_delete(extension_id: java.util.UUID)

GET       /product/list/user_applicable                                 controllers.Controller_Finance.product_getActive()
PUT       /product/general/:product_id                                  controllers.Controller_Finance.product_update(product_id: java.util.UUID)

GET       /product/extensions/:product_id                               controllers.Controller_Finance.productExtension_getAllProduct(product_id: java.util.UUID)
GET       /product/invoices/:product_id/                                controllers.Controller_Finance.product_getInvoices(product_id: java.util.UUID)
GET       /product/events/:product_id/:page/:items                      controllers.Controller_Finance.product_getEvents(product_id: java.util.UUID, page:Int, items: Int)

#Financial events
POST      /financial_events                                             controllers.Controller_Finance.productExtensionFinancialEvents_get()

#GoPay
GET       /go_pay/notification                                          utilities.financial.goPay.GoPay.payment_notification(id: Long)
GET       /go_pay/return                                                utilities.financial.goPay.GoPay.payment_return(id: Long)

#Fakturoid
GET       /invoice/:invoice_id                                          controllers.Controller_Finance.invoice_get(invoice_id: java.util.UUID)
GET       /invoice/pdf/:kind/:invoice_id                                controllers.Controller_Finance.invoice_getPdf(kind, invoice_id: java.util.UUID)
POST      /invoice/reimbursement/:invoice_id                            controllers.Controller_Finance.invoice_reimbursement(invoice_id: java.util.UUID)
POST      /invoice/resend/:invoice_id                                   controllers.Controller_Finance.invoice_resend(invoice_id: java.util.UUID)
POST      /fakturoid/callback                                           utilities.financial.fakturoid.FakturoidService.fakturoid_callback()

#Obsluha pouze pro Byzance zaměstnance
GET       /invoice/confirm/:invoice_id                                  controllers.Controller_Finance.invoice_confirm(invoice_id: java.util.UUID)
GET       /invoice/synchronize_fakturoid/:invoice_id                    controllers.Controller_Finance.invoice_synchronize_fakturoid(invoice_id: java.util.UUID)

PUT       /invoice/set_pay/:invoice_id                                  controllers.Controller_Finance.invoice_set_as_paid(invoice_id: java.util.UUID)
PUT       /invoice/send_remainder/:invoice_id                           controllers.Controller_Finance.invoice_reminder(invoice_id: java.util.UUID)
DELETE    /invoice/:invoice_id                                          controllers.Controller_Finance.invoice_delete(invoice_id: java.util.UUID)
PUT       /invoice/refund/:invoice_id                                   utilities.financial.goPay.GoPay.payment_refund(invoice_id: java.util.UUID)

#Tarrifs (Tvorba startovacích balíčků služeb)
GET       /tariff                                                       controllers.Controller_Finance.tariff_getAll()
POST      /admin/tariff                                                 controllers.Controller_Finance.tariff_create()
PUT       /admin/tariff/edit/:tariff_id                                 controllers.Controller_Finance.tariff_edit(tariff_id: java.util.UUID)
GET       /admin/tariff/get/:tariff_id                                  controllers.Controller_Finance.tariff_get(tariff_id: java.util.UUID)
PUT       /admin/tariff/deactive/:tariff_id                             controllers.Controller_Finance.tariff_deactivate(tariff_id: java.util.UUID)
PUT       /admin/tariff/active/:tariff_id                               controllers.Controller_Finance.tariff_activate(tariff_id: java.util.UUID)
PUT       /admin/tariff/up/:tariff_id                                   controllers.Controller_Finance.tariff_up(tariff_id: java.util.UUID)
PUT       /admin/tariff/down/:tariff_id                                 controllers.Controller_Finance.tariff_down(tariff_id: java.util.UUID)
DELETE    /admin/tariff/:tariff_id                                      controllers.Controller_Finance.tariff_delete(tariff_id: java.util.UUID)
GET       /admin/tariff/types                                           controllers.Controller_Finance.tariff_getAllTypes()

PUT       /admin/tariff/extensions/included/:tariff_id/:ext_id          controllers.Controller_Finance.tariff_add_extension_included(tariff_id: java.util.UUID, ext_id: java.util.UUID)
PUT       /admin/tariff/extensions/recommended/:tariff_id/:ext_id       controllers.Controller_Finance.tariff_add_extension_recommended(tariff_id: java.util.UUID, ext_id: java.util.UUID)
DELETE    /admin/tariff/extensions/:tariff_id/:ext_id                   controllers.Controller_Finance.tariff_remove_extension(tariff_id: java.util.UUID, ext_id: java.util.UUID)

GET       /admin/tariff_extension                                       controllers.Controller_Finance.tariffExtension_getAll()
GET       /admin/tariff_extension/:extension_id                         controllers.Controller_Finance.tariffExtension_get(extension_id: java.util.UUID)
POST      /admin/tariff_extension                                       controllers.Controller_Finance.tariffExtension_create()
PUT       /admin/tariff_extension/:extension_id                         controllers.Controller_Finance.tariffExtension_update(extension_id: java.util.UUID)
PUT       /admin/tariff_extension/deactivate/:extension_id              controllers.Controller_Finance.tariffExtension_deactivate(extension_id: java.util.UUID)
PUT       /admin/tariff_extension/activate/:extension_id                controllers.Controller_Finance.tariffExtension_activate(extension_id: java.util.UUID)
PUT       /admin/tariff_extension/up/:extension_id                      controllers.Controller_Finance.tariffExtension_up(extension_id: java.util.UUID)
PUT       /admin/tariff_extension/down/:extension_id                    controllers.Controller_Finance.tariffExtension_down(extension_id: java.util.UUID)
DELETE    /admin/tariff_extension/:extension_id                         controllers.Controller_Finance.tariffExtension_delete(extension_id: java.util.UUID)

### PROJECT ############ PROJECT ############### PROJECT ################ PROJECT ################# PROJECT ####################################################################
################################################################################################################################################################################

#Project
POST      /project                                                      controllers.Controller_Project.project_create()
POST      /project_valid_name                                           controllers.Controller_Project.project_valid_name()
PUT       /project/:project_id                                          controllers.Controller_Project.project_update(project_id: java.util.UUID)
GET       /project/:project_id                                          controllers.Controller_Project.project_get(project_id: java.util.UUID)
GET       /project                                                      controllers.Controller_Project.project_getByUser
DELETE    /project/:project_id                                          controllers.Controller_Project.project_delete(project_id: java.util.UUID)
PUT       /project/invite/:project_id                                   controllers.Controller_Project.project_invite(project_id: java.util.UUID)
PUT       /project/remove_participant/:project_id                       controllers.Controller_Project.project_removeParticipant(project_id: java.util.UUID)
PUT       /project/tags/add                                             controllers.Controller_Project.project_addTags
PUT       /project/tags/remove                                          controllers.Controller_Project.project_removeTags
PUT       /project/hardware/add                                         controllers.Controller_Project.project_addHardware
PUT       /project/hardware/remove/:registration_id                     controllers.Controller_Project.project_removeHardware(registration_id: java.util.UUID)
PUT       /project/hardware/deactive/:registration_id                   controllers.Controller_Project.project_deactiveHardware(registration_id: java.util.UUID)
PUT       /project/hardware/activate/:registration_id                   controllers.Controller_Project.project_activeHardware(registration_id: java.util.UUID)

#Program
POST      /b_program/version/:b_program_id                              controllers.Controller_Blocko.bProgramVersion_create(b_program_id: java.util.UUID)
PUT       /b_program/version/:version_id                                controllers.Controller_Blocko.bProgramVersion_update(version_id: java.util.UUID)
GET       /b_program/version/:version_id                                controllers.Controller_Blocko.bProgramVersion_get(version_id: java.util.UUID)
DELETE    /b_program/version/:version_id                                controllers.Controller_Blocko.bProgramVersion_delete(version_id: java.util.UUID)

POST      /b_program/:project_id                                        controllers.Controller_Blocko.bProgram_create(project_id: java.util.UUID)
GET       /b_program/:b_program_id                                      controllers.Controller_Blocko.bProgram_get(b_program_id: java.util.UUID)
PUT       /b_program/:b_program_id                                      controllers.Controller_Blocko.bProgram_update(b_program_id: java.util.UUID)
DELETE    /b_program/:b_program_id                                      controllers.Controller_Blocko.bProgram_delete(b_program_id: java.util.UUID)
PUT       /b_program/list/:page_number                                  controllers.Controller_Blocko.bProgram_getByFilter(page_number:Int)
PUT       /b_program/tags/add                                           controllers.Controller_Blocko.bProgram_addTags
PUT       /b_program/tags/remove                                        controllers.Controller_Blocko.bProgram_removeTags

#Instance
POST      /instance                                                     controllers.Controller_Blocko.instance_create
DELETE    /instance/:instance_id                                        controllers.Controller_Blocko.instance_delete(instance_id: java.util.UUID)
GET       /instance/:instance_id                                        controllers.Controller_Blocko.instance_get(instance_id: java.util.UUID)
PUT       /instance/:instance_id                                        controllers.Controller_Blocko.instance_update(instance_id: java.util.UUID)
PUT       /instance/shutdown/:instance_id                               controllers.Controller_Blocko.instance_shutdown(instance_id: java.util.UUID)
PUT       /instance/tags/add                                            controllers.Controller_Blocko.instance_addTags
PUT       /instance/tags/remove                                         controllers.Controller_Blocko.instance_removeTags

POST       /instance/api_key/:instance_id                               controllers.Controller_Blocko.instance_create_api_key(instance_id: java.util.UUID)
PUT        /instance/api_key/:instance_id/:token                        controllers.Controller_Blocko.instance_edit_api_key(instance_id: java.util.UUID, token: java.util.UUID)
DELETE     /instance/api_key/:instance_id/:token                        controllers.Controller_Blocko.instance_remove_api_key(instance_id: java.util.UUID, token: java.util.UUID)

POST       /instance/mesh_network_key/:instance_id                      controllers.Controller_Blocko.instance_create_mesh_network_key(instance_id: java.util.UUID)
PUT        /instance/mesh_network_key/:instance_id/:token               controllers.Controller_Blocko.instance_edit_mesh_network_key(instance_id: java.util.UUID, token)
DELETE     /instance/mesh_network_key/:instance_id/:token               controllers.Controller_Blocko.instance_remove_mesh_network_key(instance_id: java.util.UUID, token)

PUT       /instance/filter/:page_number                                 controllers.Controller_Blocko.get_b_program_instance_by_filter(page_number:Int)
PUT       /instance/grid_app/:snapshot_id                               controllers.Controller_Blocko.instance_change_settings_grid_App(snapshot_id: java.util.UUID)

#InstanceSnapshot
POST      /instance/snapshot/:instance_id                               controllers.Controller_Blocko.instanceSnapshot_create(instance_id: java.util.UUID)
GET       /instance/snapshot/get/:snapshot_id                           controllers.Controller_Blocko.instanceSnapshot_get(snapshot_id: java.util.UUID)
PUT       /instance/snapshot/update/:snapshot_id                        controllers.Controller_Blocko.instanceSnapshot_update(snapshot_id: java.util.UUID)
PUT       /instance/snapshot/deploy                                     controllers.Controller_Blocko.instanceSnapshot_deploy()

DELETE    /instance/snapshot/:snapshot_id                               controllers.Controller_Blocko.instanceSnapshot_delete(snapshot_id: java.util.UUID)

#Blocks
POST      /block                                                        controllers.Controller_Blocko.block_create()
POST      /block/clone                                                  controllers.Controller_Blocko.block_clone()
PUT       /block/order/up/:block_id                                     controllers.Controller_Blocko.block_orderUp(block_id: java.util.UUID)
PUT       /block/order/down/:block_id                                   controllers.Controller_Blocko.block_orderDown(block_id: java.util.UUID)
PUT       /block/:block_id                                              controllers.Controller_Blocko.block_update(block_id: java.util.UUID)
GET       /block/:block_id                                              controllers.Controller_Blocko.block_get(block_id: java.util.UUID)
DELETE    /block/:block_id                                              controllers.Controller_Blocko.block_delete(block_id: java.util.UUID)
PUT       /block/list/:page_number                                      controllers.Controller_Blocko.block_getByFilter(page_number:Int )
PUT       /admin/block/deactive/:block_id                               controllers.Controller_Blocko.block_deactivate(block_id: java.util.UUID)
PUT       /admin/block/active/:block_id                                 controllers.Controller_Blocko.block_activate(block_id: java.util.UUID)
PUT       /admin/block/approval                                         controllers.Controller_Blocko.block_public_response()
PUT       /block/tags/add                                               controllers.Controller_Blocko.block_addTags
PUT       /block/tags/remove                                            controllers.Controller_Blocko.block_removeTags

POST      /block/version/:block_id                                      controllers.Controller_Blocko.blockVersion_create(block_id: java.util.UUID)
PUT       /block/version/:version_id                                    controllers.Controller_Blocko.blockVersion_update(version_id: java.util.UUID)
PUT       /block/version/make_public/:version_id                        controllers.Controller_Blocko.blockVersion_make_public(version_id: java.util.UUID)
GET       /block/version/:version_id                                    controllers.Controller_Blocko.blockVersion_get(version_id: java.util.UUID)
DELETE    /block/version/:version_id                                    controllers.Controller_Blocko.blockVersion_delete(version_id: java.util.UUID)
PUT       /admin/block/version/set_main/:version_id                     controllers.Controller_Blocko.blockVersion_setMain(version_id: java.util.UUID)

#Blocko General
PUT       /blocko/disapprove                                            controllers.Controller_Blocko.blockoDisapprove()
PUT       /blocko/approval                                              controllers.Controller_Blocko.blockoApproval()

### EXTERNAL SERVER ############ EXTERNAL SERVER ############### EXTERNAL SERVER ################ EXTERNAL SERVER ##########################################################################
################################################################################################################################################################################

#Public Clasic Rest-Api

POST      /homer_server_manualy                                         controllers.Controller_ExternalServer.homer_server_create_manualy()
POST      /homer_server_automaticaly                                    controllers.Controller_ExternalServer.homer_server_create_automaticaly()
GET       /homer_server_registration_data                               controllers.Controller_ExternalServer.get_registration_data()

PUT       /homer_server/set_backup/:server_id                           controllers.Controller_ExternalServer.homer_server_set_backup_server(server_id: java.util.UUID)
PUT       /homer_server/set_main/:server_id                             controllers.Controller_ExternalServer.homer_server_set_main_server(server_id: java.util.UUID)
PUT       /homer_server/action/restart/:server_id                       controllers.Controller_ExternalServer.homer_server_restart(server_id: java.util.UUID)
PUT       /homer_server/action/shutdown/:server_id                      controllers.Controller_ExternalServer.homer_server_power_down(server_id: java.util.UUID)
PUT       /homer_server/action/start/:server_id                         controllers.Controller_ExternalServer.homer_server_power_on(server_id: java.util.UUID)
GET       /homer_server/download/:type                                  controllers.Controller_UploadFiles.homer_server_download(type)

PUT       /homer_server/:page_number                                    controllers.Controller_ExternalServer.homer_server_by_filter(page_number: Int)
DELETE    /homer_server/server/:server_id                               controllers.Controller_ExternalServer.homer_server_delete(server_id: java.util.UUID)
PUT       /homer_server/server/edit/:server_id                          controllers.Controller_ExternalServer.homer_server_edit(server_id: java.util.UUID)
GET       /homer_server/server/:server_id                               controllers.Controller_ExternalServer.homer_server_get(server_id: java.util.UUID)

#Super PRIVATE!! Dont change that - its required for Homer API (Secured by Server Hash-token)
GET       /cloud/homer_server/file/snapshot_programs/:snapshot_id       controllers.Controller_ExternalServer.cloud_file_get_b_program_version(snapshot_id: java.util.UUID)
GET       /cloud/homer_server/file/c_program/:compilation_id            controllers.Controller_ExternalServer.cloud_file_get_c_program_compilation(compilation_id: java.util.UUID)
GET       /cloud/homer_server/file/bootloader/:bootloader_version_id    controllers.Controller_ExternalServer.cloud_file_get_bootloader(bootloader_version_id: java.util.UUID)

#Compilation Server
POST      /compilation_server                                           controllers.Controller_ExternalServer.compilation_server_create()
PUT       /compilation_server/:server_id                                controllers.Controller_ExternalServer.compilation_server_edit(server_id: java.util.UUID)
GET       /compilation_server                                           controllers.Controller_ExternalServer.compilation_server_get_all()
GET       /compilation_server/:server_id                                controllers.Controller_ExternalServer.compilation_server_get(server_id: java.util.UUID)
DELETE    /compilation_server/:server_id                                controllers.Controller_ExternalServer.compilation_server_delete(server_id: java.util.UUID)


### ACTUALIZATION PROCEDURE ############ ACTUALIZATION PROCEDURE ############### ACTUALIZATION PROCEDURE ################ ACTUALIZATION PROCEDURE ##############################
################################################################################################################################################################################

#Actualization Procedure
PUT       /update_procedure/filter/:page_number                         controllers.Controller_Update.get_Actualization_Procedures_by_filter(page_number: Int)
GET       /update_procedure/object/:procedure_id                        controllers.Controller_Update.get_Actualization_Procedure(procedure_id: java.util.UUID)
POST      /update_procedure/make                                        controllers.Controller_Update.make_actualization_procedure()
PUT       /update_procedure/cancel/:procedure_id                        controllers.Controller_Update.canceled_procedure(procedure_id: java.util.UUID)
PUT       /update_procedure/bin/uploud                                  controllers.Controller_Update.uploadBinaryFileToBoard()

#Task
PUT       /update_task/filter/:page_number                              controllers.Controller_Update.get_Actualization_CProgramUpdatePlan_by_filter(page_number: Int)
PUT       /update_task/object/:task_id                                  controllers.Controller_Update.get_Actualization_CProgramUpdatePlan(task_id: java.util.UUID)

### COMPILATION & LIBRARIES ############ COMPILATION & LIBRARIES ############### COMPILATION & LIBRARIES ################ COMPILATION & LIBRARIES ##############################
################################################################################################################################################################################

#C_Program
POST      /c_program/create                                             controllers.Controller_Code.c_program_create()
PUT       /c_program/clone                                              controllers.Controller_Code.c_program_clone()
GET       /c_program/get/:c_program_id                                  controllers.Controller_Code.c_program_get(c_program_id: java.util.UUID)
PUT       /c_program/filter/:page_number                                controllers.Controller_Code.c_program_getByFilter(page_number: Int)


PUT       /c_program/:c_program_id                                      controllers.Controller_Code.c_program_edit(c_program_id: java.util.UUID)
DELETE    /c_program/:c_program_id                                      controllers.Controller_Code.c_program_delete(c_program_id: java.util.UUID)

POST      /c_program/version/create/:c_program_id                       controllers.Controller_Code.c_program_version_create(c_program_id: java.util.UUID)
POST      /c_program/version/working_copy/:c_program_id                 controllers.Controller_Code.c_program_version_working_copy(c_program_id: java.util.UUID)
GET       /c_program/version/get/:version_id                            controllers.Controller_Code.c_program_version_get(version_id: java.util.UUID)
PUT       /c_program/version/edit/:version_id                           controllers.Controller_Code.c_program_version_edit(version_id: java.util.UUID)
DELETE    /c_program/version/delete/:version_id                         controllers.Controller_Code.c_program_version_delete(version_id: java.util.UUID)

POST      /c_program/version/compile                                    controllers.Controller_Code.compile_c_program_code()
PUT       /c_program/version/compile/:version_id                        controllers.Controller_Code.compile_c_program_version(version_id: java.util.UUID)

PUT       /c_program/default/mark/:version_id                           controllers.Controller_Code.c_program_markScheme(version_id: java.util.UUID)

#C_Program/Public
PUT       /c_program/version_for_aprove/approve_decision                controllers.Controller_Code.c_program_public_response()
PUT       /c_program/version/make_public/:version_id                    controllers.Controller_Code.c_program_version_make_public(version_id: java.util.UUID)

#Libraries
POST      /library                                                      controllers.Controller_Library.library_create()
PUT       /library/clone                                                controllers.Controller_Library.library_clone()
PUT       /library/tags/add                                             controllers.Controller_Library.library_addTags
PUT       /library/tags/remove                                          controllers.Controller_Library.library_removeTags
GET       /library/:library_id                                          controllers.Controller_Library.library_get(library_id: java.util.UUID)
PUT       /library/:library_id                                          controllers.Controller_Library.library_edit(library_id: java.util.UUID)
PUT       /library/filter/:page_number                                  controllers.Controller_Library.library_getByFilter(page_number: Int)
DELETE    /library/:library_id                                          controllers.Controller_Library.library_delete(library_id: java.util.UUID)

POST      /library/version/:library_id                                  controllers.Controller_Library.library_version_create(library_id: java.util.UUID)
GET       /library/version/:version_id                                  controllers.Controller_Library.library_version_get(version_id: java.util.UUID)
PUT       /library/version/:version_id                                  controllers.Controller_Library.library_version_edit(version_id: java.util.UUID)
DELETE    /library/version/:version_id                                  controllers.Controller_Library.library_version_delete(version_id: java.util.UUID)

#Libraries/Public
PUT       /library/version_for_aprove/approve_decision                  controllers.Controller_Library.library_public_response()
PUT       /library/version/make_public/:version_id                      controllers.Controller_Library.library_version_make_public(version_id: java.util.UUID)

#Actualization
PUT       /c_program/version/upload                                     controllers.Controller_Hardware.hardware_updateFirmware()

#Producer
POST      /producer                                                     controllers.Controller_Hardware.producer_create()
PUT       /producer/:producer_id                                        controllers.Controller_Hardware.producer_update(producer_id: java.util.UUID)
GET       /producer/all                                                 controllers.Controller_Hardware.producer_getAll()
GET       /producer/:producer_id                                        controllers.Controller_Hardware.producer_get(producer_id: java.util.UUID)
DELETE    /producer/:producer_id                                        controllers.Controller_Hardware.producer_delete(producer_id: java.util.UUID)

#Processor
POST      /processor                                                    controllers.Controller_Hardware.processor_create()
GET       /processor/:processor_id                                      controllers.Controller_Hardware.processor_get(processor_id: java.util.UUID)
GET       /processor                                                    controllers.Controller_Hardware.processor_getAll()
PUT       /processor/:processor_id                                      controllers.Controller_Hardware.processor_edit(processor_id: java.util.UUID)
DELETE    /processor/:processor_id                                      controllers.Controller_Hardware.processor_delete(processor_id: java.util.UUID)

#Hardware
POST      /hardware/manual_registration                                 controllers.Controller_Hardware.hardware_create_manual()
POST      /hardware/automatic_registration                              controllers.Controller_Hardware.hardware_create_garfield()
PUT       /hardware/userDescription/:hardware_id                        controllers.Controller_Hardware.hardware_update_description(hardware_id: java.util.UUID)
PUT       /hardware/parameters/:hardware_id                             controllers.Controller_Hardware.hardware_update_parameters(hardware_id: java.util.UUID)
PUT       /hardware/backup                                              controllers.Controller_Hardware.hardware_updateBackup()

PUT       /hardware/filter/:page_number                                 controllers.Controller_Hardware.hardware_getByFilter(page_number: Int)
GET       /hardware/check/:registration_hash/:project_id                controllers.Controller_Hardware.hardware_check(registration_hash, project_id: java.util.UUID)
GET       /hardware/hash/:full_id                                       controllers.Controller_Hardware.hardware_get_registration_hash(full_id)
GET       /hardware/:hardware_id                                        controllers.Controller_Hardware.hardware_get(hardware_id: java.util.UUID)
DELETE    /hardware/deactivate/:hardware_id                             controllers.Controller_Hardware.hardware_deactivate(hardware_id: java.util.UUID)

PUT       /hardware/picture/upload/:hardware_id                         controllers.Controller_Hardware.hardware_uploadPicture(hardware_id: java.util.UUID)
PUT       /hardware/picture/remove/:hardware_id                         controllers.Controller_Hardware.hardware_removePicture(hardware_id: java.util.UUID)
PUT       /hardware/command                                             controllers.Controller_Hardware.hardware_command_execution()
PUT       /hardware/mqtt_password_reset/:hardware_id                    controllers.Controller_Hardware.hardware_generate_new_password(hardware_id: java.util.UUID)
PUT       /hardware/change_server/:hardware_id                          controllers.Controller_Hardware.hardware_redirect_to_server(hardware_id: java.util.UUID)

#Hardware Registration
PUT       /hardware_registration/tags/add                               controllers.Controller_Hardware.hardwareRegistration_addTags
PUT       /hardware_registration/tags/remove                            controllers.Controller_Hardware.hardwareRegistration_removeTags

#Hardware Group
POST      /hardware_group                                               controllers.Controller_Hardware.hardwareGroup_create()
PUT       /hardware_group/hardware_synnchronize                         controllers.Controller_Hardware.board_group_update_device_list()
PUT       /hardware_group/:group_id                                     controllers.Controller_Hardware.hardwareGroup_update(group_id: java.util.UUID)
PUT       /hardware_group/filter/:page_number                           controllers.Controller_Hardware.hardwareGroup_get_filter(page_number: Int)
GET       /hardware_group/individual/:group_id                          controllers.Controller_Hardware.hardwareGroup_get(group_id: java.util.UUID)
DELETE    /hardware_group/:group_id                                     controllers.Controller_Hardware.hardwareGroup_delete(group_id: java.util.UUID)

#Hardware Type
POST      /hardware_type                                                controllers.Controller_Hardware.hardwareType_create()
PUT       /hardware_type/picture/:hardware_type_id                      controllers.Controller_Hardware.hardwareType_uploadPicture(hardware_type_id: java.util.UUID)
PUT       /hardware_type/:hardware_type_id                              controllers.Controller_Hardware.hardwareType_update(hardware_type_id: java.util.UUID)
DELETE    /hardware_type/:hardware_type_id                              controllers.Controller_Hardware.hardwareType_delete(hardware_type_id: java.util.UUID)
GET       /hardware_type/all                                            controllers.Controller_Hardware.hardwareType_getAll()
GET       /hardware_type/:hardware_type_id                              controllers.Controller_Hardware.hardwareType_get(hardware_type_id: java.util.UUID)

POST      /hardware_batch/:hardware_type_id                             controllers.Controller_Hardware.hardwareBatch_create(hardware_type_id: java.util.UUID)
PUT       /hardware_batch/:batch_id                                     controllers.Controller_Hardware.hardwareBatch_edit(batch_id)
DELETE    /hardware_batch/:batch_id                                     controllers.Controller_Hardware.hardwareBatch_delete(batch_id)

#Bootloader
POST      /bootloader/:hardware_type_id                                 controllers.Controller_Hardware.bootLoader_create(hardware_type_id: java.util.UUID)
PUT       /bootloader/file/:boot_loader_id                              controllers.Controller_Hardware.bootLoader_uploadFile(boot_loader_id: java.util.UUID)
PUT       /bootloader/mark/bootloader/:boot_loader_id                   controllers.Controller_Hardware.bootLoader_markAsMain(boot_loader_id: java.util.UUID)
PUT       /bootloader/update_device_list                                controllers.Controller_Hardware.bootLoader_manualUpdate()
PUT       /bootloader/:boot_loader_id                                   controllers.Controller_Hardware.bootLoader_update(boot_loader_id: java.util.UUID)
DELETE    /bootloader/:boot_loader_id                                   controllers.Controller_Hardware.bootLoader_delete(boot_loader_id: java.util.UUID)

#File / Skryto ve swaggeru
GET       /file/bootloader/:bootloader_id                               controllers.Controller_Hardware.fileRecord_get_bootLoader(bootloader_id: java.util.UUID)
GET       /file/cprogram_version/:version_id                            controllers.Controller_Hardware.fileRecord_get_firmware(version_id: java.util.UUID)

### GRIDS ############ GRIDS ############### GRIDS ################ GRIDS ######################################################################################################
################################################################################################################################################################################

#M Project
GET       /grid_project/interface/:grid_project_id                      controllers.Controller_Grid.gridProject_getInterface(grid_project_id: java.util.UUID)

POST      /grid_project/:project_id                                     controllers.Controller_Grid.gridProject_create(project_id: java.util.UUID)
PUT       /grid_project/filter/:page_number                             controllers.Controller_Grid.gridProject_get_filterByFilter(page_number: Int)
GET       /grid_project/:grid_project_id                                controllers.Controller_Grid.gridProject_get(grid_project_id: java.util.UUID)
PUT       /grid_project/:grid_project_id                                controllers.Controller_Grid.gridProject_update(grid_project_id: java.util.UUID)
PUT       /grid_project/tags/add                                        controllers.Controller_Grid.gridProject_addTags
PUT       /grid_project/tags/remove                                     controllers.Controller_Grid.gridProject_removeTags
DELETE    /grid_project/:grid_project_id                                controllers.Controller_Grid.gridProject_delete(grid_project_id: java.util.UUID)

#M Program
POST      /grid_program/version/:grid_program_id                        controllers.Controller_Grid.gridProgramVersion_create(grid_program_id: java.util.UUID)
PUT       /grid_program/version/:version_id                             controllers.Controller_Grid.gridProgramVersion_update(version_id: java.util.UUID)
GET       /grid_program/version/:version_id                             controllers.Controller_Grid.gridProgramVersion_get(version_id: java.util.UUID)
DELETE    /grid_program/version/:version_id                             controllers.Controller_Grid.gridProgramVersion_delete(version_id: java.util.UUID)

POST      /grid_program/:grid_project_id                                controllers.Controller_Grid.gridProgram_create(grid_project_id: java.util.UUID)
GET       /grid_program/:grid_program_id                                controllers.Controller_Grid.gridProgram_get(grid_program_id: java.util.UUID)
PUT       /grid_program/:grid_program_id                                controllers.Controller_Grid.gridProgram_update(grid_program_id: java.util.UUID)
PUT       /grid_program/tags/add                                        controllers.Controller_Grid.gridProgram_addTags
PUT       /grid_program/tags/remove                                     controllers.Controller_Grid.gridProgram_removeTags
DELETE    /grid_program/:grid_program_id                                controllers.Controller_Grid.gridProgram_delete(grid_program_id: java.util.UUID)

# Terminals Aps
GET       /grid_program/app/token/:instance_id/:program_version_id      controllers.Controller_Grid.gridProgram_getByQRToken(instance_id: java.util.UUID, program_version_id: java.util.UUID)

PUT       /websocket/terminal/identificator                             controllers.Controller_Grid.get_identificator()
PUT       /websocket/terminal/identificator/:terminal_id                controllers.Controller_Grid.check_identifiactor(terminal_id: java.util.UUID)

# Wigets
POST      /widget                                                       controllers.Controller_Grid.widget_create()
PUT       /widget/order/up/:grid_widget_id                              controllers.Controller_Grid.widget_order_up(grid_widget_id: java.util.UUID)
PUT       /widget/order/down/:grid_widget_id                            controllers.Controller_Grid.widget_order_down(grid_widget_id: java.util.UUID)
POST      /widget/make_clone                                            controllers.Controller_Grid.widget_clone()
PUT       /widget/tags/add                                              controllers.Controller_Grid.widget_addTags
PUT       /widget/tags/remove                                           controllers.Controller_Grid.widget_removeTags

PUT       /widget/:grid_widget_id                                       controllers.Controller_Grid.widget_update(grid_widget_id: java.util.UUID)
GET       /widget/:grid_widget_id                                       controllers.Controller_Grid.widget_get(grid_widget_id: java.util.UUID)
DELETE    /widget/:grid_widget_id                                       controllers.Controller_Grid.widget_delete(grid_widget_id: java.util.UUID)
PUT       /widget/list/:page_number                                     controllers.Controller_Grid.widget_getByFilter(page_number: Int)
PUT       /admin/widget/deactive/:grid_widget_id                        controllers.Controller_Grid.widget_deactivate(grid_widget_id: java.util.UUID)
PUT       /admin/widget/active/:grid_widget_id                          controllers.Controller_Grid.widget_activate(grid_widget_id: java.util.UUID)
PUT       /admin/widget/approval                                        controllers.Controller_Grid.widget_public_response()

POST      /widget/version/:grid_widget_id                               controllers.Controller_Grid.widgetVersion_create(grid_widget_id: java.util.UUID)
PUT       /widget/version/:grid_widget_version_id                       controllers.Controller_Grid.widgetVersion_edit(grid_widget_version_id: java.util.UUID)
PUT       /widget/version/make_public/:grid_widget_version_id           controllers.Controller_Grid.widgetVersion_version_make_public(grid_widget_version_id: java.util.UUID)
GET       /widget/version/all/:grid_widget_id                           controllers.Controller_Grid.widgetVersion_getAll(grid_widget_id: java.util.UUID)
GET       /widget/version/:grid_widget_version_id                       controllers.Controller_Grid.widgetVersion_get(grid_widget_version_id: java.util.UUID)
DELETE    /widget/version/:grid_widget_version_id                       controllers.Controller_Grid.widgetVersion_delete(grid_widget_version_id: java.util.UUID)
PUT       /admin/widget/version/set_main/:grid_widget_id                controllers.Controller_Grid.widgetVersion_set_main(grid_widget_id: java.util.UUID)

### GARFIELD ############ GARFIELD ############### GARFIELD ################ GARFIELD ##########################################################################################
################################################################################################################################################################################

POST      /garfiled                                                     controllers.Controller_Garfield.create_Garfield()
GET       /garfield                                                     controllers.Controller_Garfield.get_Garfield_list()
PUT       /garfiled/:garfield_id                                        controllers.Controller_Garfield.edit_Garfield(garfield_id: java.util.UUID)
DELETE    /garfiled/:garfield_id                                        controllers.Controller_Garfield.remove_Garfield(garfield_id: java.util.UUID)
GET       /garfiled/:garfield_id                                        controllers.Controller_Garfield.get_Garfield(garfield_id: java.util.UUID)
GET       /admin/garfiled-print-labes/:hardware_id                      controllers.Controller_Garfield.print_label(hardware_id: java.util.UUID)

GET       /printer/printer/:garfield_id/:printer_id                     controllers.Controller_Garfield.online_state_Printer(garfield_id : java.util.UUID, printer_id: Integer)
POST      /printer/test/:garfield_id/:printer_id                        controllers.Controller_Garfield.print_test_Printer(garfield_id : java.util.UUID, printer_id: Integer)

### GSM ############ GSM ############### GSM ################ GSM ##############################################################################################################
################################################################################################################################################################################

POST      /gsm                                                          controllers.Controller_GSM.register_sim()
GET       /gsm/:sim_id                                                  controllers.Controller_GSM.get_sim(sim_id: java.util.UUID)
PUT       /gsm/filter/:page_number                                      controllers.Controller_GSM.get_sim_by_filter(page_number: Int)
GET       /admin/gsm/print-label/:sim_id                                controllers.Controller_GSM.print_sim(sim_id: java.util.UUID)
PUT       /gsm/data_consuption                                          controllers.Controller_GSM.data_consumption()
PUT       /gsm/active/:sim_id                                           controllers.Controller_GSM.active_sim(sim_id: java.util.UUID)
PUT       /gsm/deactive/:sim_id                                         controllers.Controller_GSM.de_active_sim(sim_id: java.util.UUID)
PUT       /gsm/update/:sim_id                                           controllers.Controller_GSM.edit_sim(sim_id: java.util.UUID)
DELETE    /gsm/gsm_project/:sim_id                                      controllers.Controller_GSM.unregister_sim(sim_id: java.util.UUID)
GET       /gsm/check/:registration_hash/:project_id                     controllers.Controller_GSM.gsm_check(registration_hash: java.util.UUID, project_id: java.util.UUID)

DELETE    /admin/gsm/:sim_id                                            controllers.Controller_GSM.delete_sim(sim_id: java.util.UUID)

### DATABASE

PUT       /database                                                     controllers.Controller_Database.create_db()
PUT       /database/:db_id                                              controllers.Controller_Database.edit_db(db_id: java.util.UUID)
GET       /database/all/:product_id                                     controllers.Controller_Database.list_db(product_id: java.util.UUID)
DELETE    /database/:db_id                                              controllers.Controller_Database.drop_db(db_id: java.util.UUID)
GET       /database/:db_id                                              controllers.Controller_Database.get_colections(db_id: java.util.UUID)
PUT       /database/:db_id/:collection_name                             controllers.Controller_Database.create_collection(db_id: java.util.UUID, collection_name: java.lang.String)
### TOOLS ############ TOOLS ############### TOOLS ################ TOOLS ######################################################################################################
################################################################################################################################################################################

# Map static resources from the /public folder to the /assets URL path
GET       /swagger.json                                                 controllers.ApiHelpController.getResources
GET       /assets/*file                                                 controllers.Assets.at(path="/public", file)
GET       /.well-known/acme-challenge/:file                             utilities.certificate.CertificateCheck.check(file)

### PUBLIC - ADMIN ############ PUBLIC  - ADMIN ############### PUBLIC  - ADMIN ################ PUBLIC  - ADMIN ################################################################
###################################################################################f#############################################################################################

# Basic Page Requests

GET       /admin/report/dashboard                                       controllers.Controller_Admin.report_admin_dashboard()

# Test
#POST      /admin/test                                                   utilities.test.Controller_Test.test_run()
#GET       /admin/test/run/:cmd                                          utilities.test.TestLauncher.launch_test(cmd)
#GET       /admin/test/log                                               utilities.test.TestLog.get_test_log()
#GET       /admin/test/log/clear                                         utilities.test.TestLog.clear_test_log()

# BUGS SERVISE PAGE
GET       /admin/bug                                                    controllers.Controller_Admin.serverError_getAll()
GET       /admin/bug/:bug_id                                            controllers.Controller_Admin.serverError_get(bug_id: java.util.UUID)
DELETE    /admin/bug                                                    controllers.Controller_Admin.serverError_deleteAll()
DELETE    /admin/bug/:bug_id                                            controllers.Controller_Admin.serverError_delete(bug_id: java.util.UUID)
PUT       /admin/bug/report/:bug_id                                     controllers.Controller_Admin.serverError_report(bug_id: java.util.UUID)

POST      /admin/tyrion/update                                          controllers.Controller_Admin.server_scheduleUpdate()
DELETE    /admin/tyrion/update                                          controllers.Controller_Admin.server_scheduleUpdate_remove()
GET       /admin/tyrion/update                                          controllers.Controller_Admin.server_getUpdates()

