# Verze 1.05.7.1 #
####  12.4.2016 ####

### Tyrion a nový DashBoard ###
 * Nasazení designu pro zobrazení a ovládání základních elementů serveru. Slouží k zobrazení informací a pro vývojáře navázané na Tyrion.
    * Správa zařízení připojených přes WebSocket
    * Nunté dodělat rozumné read me

### Přidání systému Loggy pro logování chyb
    * Změna konfigurace Logbacku
    * Zapnutí logování SQL příkazů


--------

-----

### Práva nových notificakí ###
(připraveno pro implementaci na straně frontend)

 * Proběhla implementace ukládání notifikací v případě, že uživatel nebyl zastižen k zaslání. Cílem bylo vytvořit API,
  na které se frontend po svém obnovení dotáže pro seznam notifikací v době nepřítomnosti uživatele. Vracím seznam maximálně 25
  notifikací. Pokud jich je více - stránkuji. Každá notifikace za měsíc vyexpiruje (Systém jí smaže). Takže uživatel se může
  podívat až měsíc dozadu.

 * Mezi řádky. Redhat má jen 2/7 produktů otevřené komunitě (linux a Jboss) a jako opensource. :D U ostatních je to těžkce komerční zpropadená korporace :D
  a z výroční zprávy akcionářům vyplívá, že na produktech, které jsou otevřené vydělává jen 37% peněz. (Rok předtím to bylo 44%)  :D

 * V případě že notifikaci doručím přihlášenému uživateli jí stejně uložím do systému jako historii.

 * Objekt je zdokumentován ve Swaggeru. Přibyl parameter "read" značící, zda si ho uživatel už přečetl. Je to poměrně jednoduché.
  V případě prvního zaslání nepřečtené notifikace je parameter read = false. A v případě znovu zavolání je už označen jako read = true.
  Je to uděláno úplně stejně jako na Azure - že po F5 prohlížeče je notifikace chápána jako přečtená.

 * Některé notifikace mají v parametru "confirmation_required". Což znamená, že Tyrion požaduje jejich potvrzení!
  Například informování o odstávce. O vypršelé kreditní kartě atd. V případě že uživatel neodkliknul potvrzení (Api pro potvrzení)
  tak mu Tyrion danou zpávu zašle znovu při dalším přihlášení dokud to nepotvrdí. :D ( Big brother is watching you! ) :D


 * Při přihlášení uživatele zároveň přibyly 3 parametry, které lze vykreslit do šablony.
    * První je počet nových událostí (notifikací) "unread_notification"
    * Druhý je počet nepřečtených zpráv "unread_message". Vize zpráv je pro komunitu a jejich projekty. Nebo pro připisování poznámek
      k úpravám kódu atd. pokud na projektu pracuje více uživatelů. Vize zatím nic na Tyrionovi není implementováno.
    * Tickety technické podpory "unread_ticket" - právě probíhá implementace do Tyriona skrze zendesk (nástroj třetí strany na technickou podporu)

  * Notifikace se také zasílají všem uživatelům, kterých se to týká. (sdílený projekt, homer.. komunitní projekt, připsání
  nového komentáře atd.

  * #### úprava linku u získání SEE ####

        GET  /notification/:identificator  -------> GET  /notification/connection/:identificator

  * Přidání API pro získání posledních notifikací ( obsahuje i to, co se jako notifikace nemusí uživateli odesílat)
      například changelog jeho portfoli.  Pokud se zavolá první api - vrátí to seznam od poslední po první s omezením
      na 25 prvků. Pokud chce ít uživatel hlouběji v notifikacích na konec url se připojí číslo ze seznamu stránek
      uvedených v JSON.

        GET             /notification/list
        GET             /notification/list/{page_number}
        DELETE          /notification/{notification_id}
        PUT             /notification/confirm/{notification_id}

-----

### EVIDENCE PŘIHLÁŠENÍ ###
(připraveno pro implementaci na straně frontend)

      GET      /coreClient/connections
         - Vrátí seznam všech přihlášení, kde je stále platný token - uživatel má možnost ho deaktivovat.

      DELETE   /coreClient/connection/:connection_id
         - API pro jeho trvalou deaktivaci (možnost deaktivovat i mobilní zařízení)
         - Je ale nutné Tomášovi specifikovat,jak by měl asi rozlišovat jednotlivá spojení????? Radku?


-----

### Oprava Bugů ###

 * fixed [TYRION-183](http://youtrack.byzance.cz/youtrack/issue/TYRION-183)
 * fixed [TYRION-181](http://youtrack.byzance.cz/youtrack/issue/TYRION-181)

------

### TODO do další verze ###

 * TODO 3 Tomáš Z.: Zdokumentovat všechny Models pro Swagger
 * TODO 4 Tomáš Z.: Přidat cyklické odmazávání BLOB v Azure, na které už neexistuje databázová vazba (Nějaká fičura co se zapne každý den ve 3 ráno a provede sekvenci kam
      každý vývojář může přidávat metody které se provedou... (Mazání prošlých tokenů, mazání prošlých nedokončených ověření přes sociální sítě atd... Viz todo 5)
 * TODO 5 Tomáš Z.: Přidat cyklické odmazávání Vygenerovaných nezrealizovaných spojení na sociální sítě (Linkded Account)
 * TODO 6 Tomáš Z.: Pokud se uživatel přihlásí přes facebook, k jeho účtu bude přidělen plovoucí token. Pokud se přihlásí znova a znova..
      budou se vtvářet další a další připojení. Je žádoucí mazat předchozí spojení pokud poznám, že je to ze stejného prohlížeče?
      PS: Vyžaduje to tak půl dne (+ ideálně přepsat třídu s přihlášení přes facebook a odzkoušet github..
 * TODO 7 Tomáš Z.: Dodělat disconnect http://youtrack.byzance.cz/youtrack/issue/TYRION-169
 * TODO 8 ALL-Tyrion: Bude potřeba dodělat řešení pro prodlužování platnosti tokenu (Buď nějak magicky na Tyrionovi nebo ze strany frontendu) Asi to dodělá Tomáš.
